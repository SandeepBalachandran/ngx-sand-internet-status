{"version":3,"file":"ngx-sand-internet-status.js","sources":["../../../projects/ngx-internet-status/src/lib/ngx-internet-status/type.enum.ts","../../../projects/ngx-internet-status/src/lib/service/ngx-internet-status.service.ts","../../../projects/ngx-internet-status/src/lib/ngx-internet-status/ngx-internet-status.component.html","../../../projects/ngx-internet-status/src/lib/ngx-internet-status/ngx-internet-status.component.ts","../../../projects/ngx-internet-status/src/lib/ngx-internet-status.module.ts","../../../projects/ngx-internet-status/src/public-api.ts","../../../projects/ngx-internet-status/src/ngx-sand-internet-status.ts"],"sourcesContent":["export enum OnlineStatusType {\r\n    OFFLINE = 0,\r\n    ONLINE = 1\r\n  }","import { EventEmitter, Injectable, OnDestroy } from '@angular/core';\nimport { OnlineStatusType } from '../ngx-internet-status/type.enum';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxInternetStatusService implements OnDestroy {\n  public status = new EventEmitter<OnlineStatusType>(true);\n  static EVENT_TYPE_ONLINE = 'online';\n  static EVENT_TYPE_OFFLINE = 'offline';\n\n  constructor(private http: HttpClient) {\n    this.bind();\n    window.addEventListener(NgxInternetStatusService.EVENT_TYPE_ONLINE, this.onOnline);\n    window.addEventListener(NgxInternetStatusService.EVENT_TYPE_OFFLINE, this.onOffline);\n  }\n\n\n  ngOnDestroy(): void {\n    try {\n      window.removeEventListener(NgxInternetStatusService.EVENT_TYPE_ONLINE, this.onOnline);\n      window.removeEventListener(NgxInternetStatusService.EVENT_TYPE_OFFLINE, this.onOffline);\n    } catch (e) {\n      console.log(e);\n    }\n\n  }\n\n  private bind() {\n    console.log(this)\n    this.onOnline = this.onOnline.bind(this);\n    this.onOffline = this.onOffline.bind(this);\n  }\n\n  private onOnline() {\n    this.status.emit(OnlineStatusType.ONLINE);\n  }\n\n  private onOffline() {\n    this.status.emit(OnlineStatusType.OFFLINE);\n  }\n}","<div  class=\"banner\" *ngIf=\"status !== undefined && settings.type ==='banner'\" [ngClass]=\"{'online': status === OnlineStatusType.ONLINE, 'offline':status === OnlineStatusType.OFFLINE }\">\r\n    <h2> {{status === OnlineStatusType.OFFLINE ? settings.offlineTitle : settings.onlineTitle }}</h2>\r\n    <span> <label>{{ status === OnlineStatusType.OFFLINE ? settings.offlineText : settings.onlineText }}</label></span>\r\n</div>\r\n\r\n<div class=\"text-only\" *ngIf=\"settings.type==='textonly'\">\r\n    <span>{{ status === OnlineStatusType.OFFLINE ? settings.offlineText : settings.onlineText }}</span>\r\n</div>","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { NgxInternetStatusService,  } from \"../service/ngx-internet-status.service\";\nimport { OnlineStatusType } from './type.enum'\n\n@Component({\n  selector: \"ngx-sand-internet-status\",\n  templateUrl: \"./ngx-internet-status.component.html\",\n  styleUrls: ['./ngx-internet-status.component.scss']\n})\nexport class NgxInternetStatusComponent implements OnInit,OnChanges {\n\n  status: OnlineStatusType;\n  OnlineStatusType = OnlineStatusType;\n\n  /**\n   * Settings option\n   */\n  @Input() public settings: any = {};\n\n\n  constructor(private onlineStatusService: NgxInternetStatusService) {\n    this.onlineStatusService.status.subscribe((status: OnlineStatusType) => {\n      this.status = status;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n  ngOnChanges(): void {\n\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxInternetStatusComponent } from './ngx-internet-status/ngx-internet-status.component';\n\n\n\n@NgModule({\n  declarations: [NgxInternetStatusComponent],\n  imports: [HttpClientModule,FormsModule,BrowserModule,CommonModule],\n  exports: [NgxInternetStatusComponent]\n})\nexport class NgxInternetStatusModule { }\n","/*\n * Public API Surface of ngx-internet-status\n */\n\nexport * from './lib/service/ngx-internet-status.service';\nexport * from './lib/ngx-internet-status/ngx-internet-status.component';\nexport * from './lib/ngx-internet-status.module';\nexport * from './lib/ngx-internet-status/type.enum'","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate","i0.ɵɵtemplate"],"mappings":"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"}