{"version":3,"sources":["../../../projects/ngx-internet-status/src/lib/ngx-internet-status/type.enum.ts","../../../projects/ngx-internet-status/src/lib/service/ngx-internet-status.service.ts","../../../projects/ngx-internet-status/src/lib/ngx-internet-status/ngx-internet-status.component.html","../../../projects/ngx-internet-status/src/lib/ngx-internet-status/ngx-internet-status.component.ts","../../../projects/ngx-internet-status/src/lib/ngx-internet-status.module.ts"],"names":["OnlineStatusType","NgxInternetStatusService","http","this","status","EventEmitter","bind","window","addEventListener","EVENT_TYPE_ONLINE","onOnline","EVENT_TYPE_OFFLINE","onOffline","prototype","ngOnDestroy","removeEventListener","e","console","log","emit","ONLINE","OFFLINE","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate","NgxInternetStatusComponent","onlineStatusService","_this","settings","subscribe","ngOnInit","ngOnChanges","ɵɵdirectiveInject","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","i0.ɵɵtemplate","NgxInternetStatusModule","imports","HttpClientModule","FormsModule","BrowserModule","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["export enum OnlineStatusType {\r\n    OFFLINE = 0,\r\n    ONLINE = 1\r\n  }","import { EventEmitter, Injectable, OnDestroy } from '@angular/core';\nimport { OnlineStatusType } from '../ngx-internet-status/type.enum';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxInternetStatusService implements OnDestroy {\n  public status = new EventEmitter<OnlineStatusType>(true);\n  static EVENT_TYPE_ONLINE = 'online';\n  static EVENT_TYPE_OFFLINE = 'offline';\n\n  constructor(private http: HttpClient) {\n    this.bind();\n    window.addEventListener(NgxInternetStatusService.EVENT_TYPE_ONLINE, this.onOnline);\n    window.addEventListener(NgxInternetStatusService.EVENT_TYPE_OFFLINE, this.onOffline);\n  }\n\n\n  ngOnDestroy(): void {\n    try {\n      window.removeEventListener(NgxInternetStatusService.EVENT_TYPE_ONLINE, this.onOnline);\n      window.removeEventListener(NgxInternetStatusService.EVENT_TYPE_OFFLINE, this.onOffline);\n    } catch (e) {\n      console.log(e);\n    }\n\n  }\n\n  private bind() {\n    console.log(this)\n    this.onOnline = this.onOnline.bind(this);\n    this.onOffline = this.onOffline.bind(this);\n  }\n\n  private onOnline() {\n    this.status.emit(OnlineStatusType.ONLINE);\n  }\n\n  private onOffline() {\n    this.status.emit(OnlineStatusType.OFFLINE);\n  }\n}","<div  class=\"banner\" *ngIf=\"status !== undefined && settings.type ==='banner'\" [ngClass]=\"{'online': status === OnlineStatusType.ONLINE, 'offline':status === OnlineStatusType.OFFLINE }\">\r\n    <h2> {{status === OnlineStatusType.OFFLINE ? settings.offlineTitle : settings.onlineTitle }}</h2>\r\n    <span> <label>{{ status === OnlineStatusType.OFFLINE ? settings.offlineText : settings.onlineText }}</label></span>\r\n</div>\r\n\r\n<div class=\"text-only\" *ngIf=\"settings.type==='textonly'\">\r\n    <span>{{ status === OnlineStatusType.OFFLINE ? settings.offlineText : settings.onlineText }}</span>\r\n</div>","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { NgxInternetStatusService,  } from \"../service/ngx-internet-status.service\";\nimport { OnlineStatusType } from './type.enum'\n\n@Component({\n  selector: \"ngx-sand-internet-status\",\n  templateUrl: \"./ngx-internet-status.component.html\",\n  styleUrls: ['./ngx-internet-status.component.scss']\n})\nexport class NgxInternetStatusComponent implements OnInit,OnChanges {\n\n  status: OnlineStatusType;\n  OnlineStatusType = OnlineStatusType;\n\n  /**\n   * Settings option\n   */\n  @Input() public settings: any = {};\n\n\n  constructor(private onlineStatusService: NgxInternetStatusService) {\n    this.onlineStatusService.status.subscribe((status: OnlineStatusType) => {\n      this.status = status;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n  ngOnChanges(): void {\n\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxInternetStatusComponent } from './ngx-internet-status/ngx-internet-status.component';\n\n\n\n@NgModule({\n  declarations: [NgxInternetStatusComponent],\n  imports: [HttpClientModule,FormsModule,BrowserModule,CommonModule],\n  exports: [NgxInternetStatusComponent]\n})\nexport class NgxInternetStatusModule { }\n"]}