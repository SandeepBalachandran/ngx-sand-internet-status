{"version":3,"file":"ngx-sand-internet-status.umd.js","sources":["../../../projects/ngx-internet-status/src/lib/ngx-internet-status/type.enum.ts","../../../projects/ngx-internet-status/src/lib/service/ngx-internet-status.service.ts","../../../projects/ngx-internet-status/src/lib/ngx-internet-status/ngx-internet-status.component.html","../../../projects/ngx-internet-status/src/lib/ngx-internet-status/ngx-internet-status.component.ts","../../../projects/ngx-internet-status/src/lib/ngx-internet-status.module.ts","../../../projects/ngx-internet-status/src/public-api.ts","../../../projects/ngx-internet-status/src/ngx-sand-internet-status.ts"],"sourcesContent":["export enum OnlineStatusType {\r\n    OFFLINE = 0,\r\n    ONLINE = 1\r\n  }","import { EventEmitter, Injectable, OnDestroy } from '@angular/core';\nimport { OnlineStatusType } from '../ngx-internet-status/type.enum';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxInternetStatusService implements OnDestroy {\n  public status = new EventEmitter<OnlineStatusType>(true);\n  static EVENT_TYPE_ONLINE = 'online';\n  static EVENT_TYPE_OFFLINE = 'offline';\n\n  constructor(private http: HttpClient) {\n    this.bind();\n    window.addEventListener(NgxInternetStatusService.EVENT_TYPE_ONLINE, this.onOnline);\n    window.addEventListener(NgxInternetStatusService.EVENT_TYPE_OFFLINE, this.onOffline);\n  }\n\n\n  ngOnDestroy(): void {\n    try {\n      window.removeEventListener(NgxInternetStatusService.EVENT_TYPE_ONLINE, this.onOnline);\n      window.removeEventListener(NgxInternetStatusService.EVENT_TYPE_OFFLINE, this.onOffline);\n    } catch (e) {\n      console.log(e);\n    }\n\n  }\n\n  private bind() {\n    console.log(this)\n    this.onOnline = this.onOnline.bind(this);\n    this.onOffline = this.onOffline.bind(this);\n  }\n\n  private onOnline() {\n    this.status.emit(OnlineStatusType.ONLINE);\n  }\n\n  private onOffline() {\n    this.status.emit(OnlineStatusType.OFFLINE);\n  }\n}","<div  class=\"banner\" *ngIf=\"status !== undefined && settings.type ==='banner'\" [ngClass]=\"{'online': status === OnlineStatusType.ONLINE, 'offline':status === OnlineStatusType.OFFLINE }\">\r\n    <h2> {{status === OnlineStatusType.OFFLINE ? settings.offlineTitle : settings.onlineTitle }}</h2>\r\n    <span> <label>{{ status === OnlineStatusType.OFFLINE ? settings.offlineText : settings.onlineText }}</label></span>\r\n</div>\r\n\r\n<div class=\"text-only\" *ngIf=\"settings.type==='textonly'\">\r\n    <span>{{ status === OnlineStatusType.OFFLINE ? settings.offlineText : settings.onlineText }}</span>\r\n</div>","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { NgxInternetStatusService,  } from \"../service/ngx-internet-status.service\";\nimport { OnlineStatusType } from './type.enum'\n\n@Component({\n  selector: \"ngx-sand-internet-status\",\n  templateUrl: \"./ngx-internet-status.component.html\",\n  styleUrls: ['./ngx-internet-status.component.scss']\n})\nexport class NgxInternetStatusComponent implements OnInit,OnChanges {\n\n  status: OnlineStatusType;\n  OnlineStatusType = OnlineStatusType;\n\n  /**\n   * Settings option\n   */\n  @Input() public settings: any = {};\n\n\n  constructor(private onlineStatusService: NgxInternetStatusService) {\n    this.onlineStatusService.status.subscribe((status: OnlineStatusType) => {\n      this.status = status;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n  ngOnChanges(): void {\n\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxInternetStatusComponent } from './ngx-internet-status/ngx-internet-status.component';\n\n\n\n@NgModule({\n  declarations: [NgxInternetStatusComponent],\n  imports: [HttpClientModule,FormsModule,BrowserModule,CommonModule],\n  exports: [NgxInternetStatusComponent]\n})\nexport class NgxInternetStatusModule { }\n","/*\n * Public API Surface of ngx-internet-status\n */\n\nexport * from './lib/service/ngx-internet-status.service';\nexport * from './lib/ngx-internet-status/ngx-internet-status.component';\nexport * from './lib/ngx-internet-status.module';\nexport * from './lib/ngx-internet-status/type.enum'","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["OnlineStatusType","EventEmitter","Injectable","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","Component","Input","HttpClientModule","FormsModule","BrowserModule","CommonModule","NgModule"],"mappings":"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"}